<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">

<HTML>
<HEAD> <TITLE>Suffix tree of Woolloomooloo</TITLE>
<META NAME="description" Content="Suffix tree of Woolloomooloo">
<META NAME="keywords"    Content="Suffix tree of Woolloomooloo Sydney New South Wales NSW Australia oz">
<!-- DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN" -->
<!--        GENERATOR = vi (Linux + Solaris) -->
<META NAME="GENERATOR" CONTENT="vi (Linux + Solaris)">
<SCRIPT LANGUAGE="JavaScript">
var REMOTE_HOST='(none)';
</SCRIPT>
<SCRIPT LANGUAGE="JavaScript">
<!--
REMOTE_HOST='18.79.197.194.in-addr.arpa domain name pointer ttihfwgw.tieto.com.';

// -->
</SCRIPT>
<!-- Lloyd ALLISON, Victoria, Australia -->
<!--              Content-Type = text/html;         charset=iso-8859-1 -->
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">

</HEAD>

<BODY BGCOLOR="#EEEEEE" TEXT="#000000" LINK="#0000FF" VLINK="#400090" ONLOAD="if(top!=self)top.location=self.location;">

<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="2" WIDTH="100%">
<TR><TD ALIGN="center"> <!--   BGCOLOR="#EEFFEE" -->



<H3>Suffix tree of Woolloomooloo</H3>


</TD></TR>
</TABLE>

<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="2" WIDTH="100%">
<TR><TD ALIGN="center" VALIGN="top" WIDTH="10%">

  <TABLE BORDER="1" CELLSPACING="0" CELLPADDING="1"> <!-- left column -->
  <TR><TD>
<A HREF="http://www.allisons.org/ll/"        TARGET="_top">LA&nbsp;home</A><BR>
<A HREF="http://www.allisons.org/ll/Computing/" TARGET="_top">Computing</A><BR>


<!-- Left  extras for children  NB. relative to children -->
<A HREF="../../"  TARGET="_top">Algorithms</A><BR>
&nbsp;<A HREF="../../Glossary/"  TARGET="_top">glossary</A><BR>
&nbsp;<A HREF="../"              TARGET="_top">Binary&nbsp;Trees</A><BR>
&nbsp;&nbsp;<A HREF="../Search/"   TARGET="_top">Search&nbsp;T'</A><BR>
&nbsp;&nbsp;<A HREF="../Trie/"     TARGET="_top">Tries</A><BR>
&nbsp;&nbsp;<A HREF="../PATRICIA/" TARGET="_top">PATRICIA</A><BR>
&nbsp;&nbsp;<A HREF="../Suffix/"   TARGET="_top">Suffix&nbsp;Trees</A><BR>
&nbsp;<A HREF="../../Table/" TARGET="_top">Tables</A><BR>

&nbsp;&nbsp;<FONT SIZE="-1"><B>Woolloomooloo</B></FONT><BR>
<!-- Left Extras Here -->
  <!-- Lloyd Allison -->
  </TD></TR>
  </TABLE>

</TD><TD ALIGN="left" VALIGN="top" WIDTH="80%">



<FONT SIZE="+1">

<HR SIZE="2" NOSHADE> <H2>W</H2>
<PRE>
     |(1:W)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Wo</H2>
<P>suffixes <TT>Wo</TT> and <TT>o</TT></P>
<PRE>
     |(1:Wo)|leaf
     |
tree:|
     |
     |(2:o)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woo</H2>
<P>suffixes <TT>Woo</TT>, <TT>oo</TT> and <TT>o</TT>,
well <TT>oo</TT> covers the last two cases on its own.</P>
<PRE>
     |(1:Woo)|leaf
     |
tree:|
     |
     |(2:oo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Wool</H2>
<P><TT>Wool</TT>, <TT>ool</TT>, <TT>ol</TT> and <TT>l</TT>;&nbsp;
oo+l splits to ool and ol.</P>
<PRE>
     |(1:Wool)|leaf
     |
tree:|
     |     <B>|(3:ol)|leaf</B>
     |(2:o)|
     |     <B>|(4:l)|leaf</B>
     |
     |
     |(4:l)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Wooll</H2>
<P><TT>ll</TT> covers <TT>ll</TT> and also <TT>l</TT>.</P>
<PRE>
     |(1:Wooll)|leaf
     |
tree:|
     |     |(3:oll)|leaf
     |(2:o)|
     |     |(4:ll)|leaf
     |
     |
     |(4:ll)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woollo</H2>
<P><TT>ll</TT>+<TT>o</TT>
splits to <TT>llo</TT> and <TT>lo</TT>.</P>
<PRE>
     |(1:Woollo)|leaf
     |
tree:|
     |     |(3:ollo)|leaf
     |(2:o)|
     |     |(4:llo)|leaf
     |
     |
     |     <B>|(5:lo)|leaf</B>
     |(4:l)|
     |     <B>|(6:o)|leaf</B>
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloo</H2>
<PRE>
     |(1:Woolloo)|leaf
     |
tree:|
     |     |(3:olloo)|leaf
     |(2:o)|
     |     |(4:lloo)|leaf
     |
     |
     |     |(5:loo)|leaf
     |(4:l)|
     |     |(6:oo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloom</H2>
<P><TT>oo...</TT> splits to <TT>ool...</TT> and <TT>oom</TT>.
Also <TT>m</TT> is new.</P>
<PRE>
     |(1:Woolloom)|leaf
     |
tree:|
     |     |     <B>|(4:lloom)|leaf</B>
     |     |(3:o)|
     |     |     <B>|(8:m)|leaf</B>
     |     |
     |(2:o)|
     |     |(4:lloom)|leaf
     |     |
     |     <B>|(8:m)|leaf</B>
     |
     |
     |     |(5:loom)|leaf
     |(4:l)|
     |     |(6:oom)|leaf
     |
     <B>|(8:m)|leaf</B>
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomo</H2>
<PRE>
     |(1:Woolloomo)|leaf
     |
tree:|
     |     |     |(4:lloomo)|leaf
     |     |(3:o)|
     |     |     |(8:mo)|leaf
     |     |
     |(2:o)|
     |     |(4:lloomo)|leaf
     |     |
     |     |(8:mo)|leaf
     |
     |
     |     |(5:loomo)|leaf
     |(4:l)|
     |     |(6:oomo)|leaf
     |
     |(8:mo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomoo</H2>
<P>No split -- already had <TT>oo...</TT>.</P>
<PRE>
     |(1:Woolloomoo)|leaf
     |
tree:|
     |     |     |(4:lloomoo)|leaf
     |     |(3:o)|
     |     |     |(8:moo)|leaf
     |     |
     |(2:o)|
     |     |(4:lloomoo)|leaf
     |     |
     |     |(8:moo)|leaf
     |
     |
     |     |(5:loomoo)|leaf
     |(4:l)|
     |     |(6:oomoo)|leaf
     |
     |(8:moo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomool</H2>
<P>No split -- already had <TT>ool...</TT>.</P>
<PRE>
     |(1:Woolloomool)|leaf
     |
tree:|
     |     |     |(4:lloomool)|leaf
     |     |(3:o)|
     |     |     |(8:mool)|leaf
     |     |
     |(2:o)|
     |     |(4:lloomool)|leaf
     |     |
     |     |(8:mool)|leaf
     |
     |
     |     |(5:loomool)|leaf
     |(4:l)|
     |     |(6:oomool)|leaf
     |
     |(8:mool)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomoolo</H2>
<P>Split to <TT>ooll...</TT> and <TT>oolo</TT> etc.</P>
<PRE>
     |(1:Woolloomoolo)|leaf
     |
tree:|
     |     |     |     <B>|(5:loomoolo)|leaf</B>
     |     |     |(4:l)|
     |     |     |     <B>|(12:o)|leaf</B>
     |     |(3:o)|
     |     |     |(8:moolo)|leaf
     |(2:o)|
     |     |     <B>|(5:loomoolo)|leaf</B>
     |     |(4:l)|
     |     |     <B>|(12:o)|leaf</B>
     |     |
     |     |
     |     |(8:moolo)|leaf
     |
     |     |(5:loomoolo)|leaf
     |(4:l)|
     |     |(6:oomoolo)|leaf
     |
     |(8:moolo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomooloo</H2>
<P>Extensions, no new splits.</P>
<PRE>
     |(1:Woolloomooloo)|leaf
     |
tree:|
     |     |     |     |(5:loomooloo)|leaf
     |     |     |(4:l)|
     |     |     |     |(12:oo)|leaf
     |     |(3:o)|
     |     |     |(8:mooloo)|leaf
     |(2:o)|
     |     |     |(5:loomooloo)|leaf
     |     |(4:l)|
     |     |     |(12:oo)|leaf
     |     |
     |     |
     |     |(8:mooloo)|leaf
     |
     |     |(5:loomooloo)|leaf
     |(4:l)|
     |     |(6:oomooloo)|leaf
     |
     |(8:mooloo)|leaf
</PRE>

<HR SIZE="2" NOSHADE> <H2>Woolloomooloo$</H2>
<P>Add an end-of-string character, `$', split to
<TT>oom...</TT> and <TT>oo$</TT> etc..</P>
<PRE>
     |(1:Woolloomooloo$)|leaf
tree:|
     |     |     |     |(5:loomooloo$)|leaf
     |     |     |(4:<FONT COLOR="#CC0000"><B>l</B></FONT>)<BLINK>|</BLINK>
     |     |     |     |(12:oo$)|leaf
     |     |(3:<FONT COLOR="#CC0000"><B>o</B></FONT>)|
     |     |     |(8:mooloo$)|leaf
     |     |     |
     |     |     <B>|(14:$)|leaf</B>
     |(2:<FONT COLOR="#CC0000"><B>o</B></FONT>)|
     |     |     |(5:loomooloo$)|leaf
     |     |(4:l)|
     |     |     <B>|(12:oo$)|leaf</B>
     |     |
     |     |(8:mooloo$)|leaf
     |     |
     |     <B>|(14:$)|leaf</B>
     |
     |     |(5:loomooloo$)|leaf
     |(4:l)|
     |     |      <B>|(8:mooloo$)|leaf</B>
     |     |(6:oo)|
     |     |      <B>|(14:$)|leaf</B>
     |
     |(8:mooloo$)|leaf
     |
     <B>|(14:$)|leaf</B>
</PRE>

<HR SIZE="2" NOSHADE> <H2>Longest repeated substring</H2>
<P>``<B><TT><FONT COLOR="#CC0000">ool</FONT></TT></B>''
in <FONT COLOR="#CC0000">red</FONT> above (or <TT>loo</TT>)
-- deepest split/string with at least two descendants.</P>

</FONT>

<HR SIZE="2" NOSHADE> <H2>Longest Palindrome</H2>
<P>i.e. Input &nbsp;
<TT>Woolloomooloo$ooloomoollooW#</TT>, and
the longest palindrome is ``<TT>loomool</TT>'',
i.e. the deepest fork-node (7-characters) with both
a ``<TT>...$...</TT>'' and
a ``<TT>...#</TT>'' sub-tree -- in <FONT COLOR="#CC0000">red</FONT> below:</P>
<PRE>
     |     |(2:oolloomooloo$ooloomoollooW#)|leaf
     |(1:W)|
     |     |(28:#)|leaf
tree:|
     |     |     |     |       |(8:mooloo$ooloomoollooW#)|leaf
     |     |     |     |(5:loo)|
     |     |     |     |       |(27:W#)|leaf
     |     |     |(4:l)|
     |     |     |     |       |(14:$ooloomoollooW#)|leaf
     |     |     |     |(12:oo)|
     |     |     |     |       |(20:moollooW#)|leaf
     |     |(3:o)|
     |     |     |        |(12:oo$ooloomoollooW#)|leaf
     |     |     |(8:mool)|
     |     |     |        |(24:looW#)|leaf
     |     |     |
     |     |     |(14:$ooloomoollooW#)|leaf
     |     |     |
     |     |     |(27:W#)|leaf
     |(2:o)|
     |     |     |       |(8:mooloo$ooloomoollooW#)|leaf
     |     |     |(5:loo)|
     |     |     |       |(27:W#)|leaf
     |     |(4:l)|
     |     |     |       |(14:$ooloomoollooW#)|leaf
     |     |     |(12:oo)|
     |     |     |       |(20:moollooW#)|leaf
     |     |
     |     |        |(12:oo$ooloomoollooW#)|leaf
     |     |(8:mool)|
     |     |        |(24:looW#)|leaf
     |     |
     |     |(14:$ooloomoollooW#)|leaf
     |     |
     |     |(27:W#)|leaf
     |
     |     |       |(8:mooloo$ooloomoollooW#)|leaf
     |     |(5:loo)|
     |     |       |(27:W#)|leaf
     |(4:<FONT COLOR="#CC0000"><B>l</B></FONT>)|
     |     |      |        <B>|</B>(12:oo<BLINK>$</BLINK>ooloomoollooW#)|leaf
     |     |      |(8:<FONT COLOR="#CC0000"><B>mool</B></FONT>)<B><BLINK>|</BLINK></B>
     |     |      |        <B>|</B>(24:looW<BLINK>#</BLINK>)|leaf
     |     |(6:<FONT COLOR="#CC0000"><B>oo</B></FONT>)|
     |     |      |(14:$ooloomoollooW#)|leaf
     |     |      |
     |     |      |(27:W#)|leaf
     |
     |        |(12:oo$ooloomoollooW#)|leaf
     |(8:mool)|
     |        |(24:looW#)|leaf
     |
     |(14:$ooloomoollooW#)|leaf
     |
     |(28:#)|leaf
</PRE>

<P>See the interactive
[<A HREF="../Suffix/#demoForm">suffix tree (click)</A>]
demonstration.
</P>

<DIV ALIGN="right"><FONT SIZE="-1">-- &copy; LA</FONT><DIV>


</TD><TD ALIGN="center" VALIGN="top" WIDTH="10%">



<TABLE BORDER="1" CELLSPACING="0" CELLPADDING="1"> <!-- right column -->
<TR><TD>
<FONT SIZE="-1">www</FONT><BR>


<TABLE BORDER="1" CELLSPACING="0" CELLPADDING="3" BGCOLOR="#AAFFAA" WIDTH="100%">
<TR><TD>

<SCRIPT LANGUAGE="JavaScript">
<!--
function locale()
 { var len=REMOTE_HOST.length;
   if(len>0 && REMOTE_HOST.lastIndexOf('.')==len-1)
   REMOTE_HOST=REMOTE_HOST.substring(0,len-1);
   if(REMOTE_HOST.lastIndexOf('.')==REMOTE_HOST.length-3)
   return REMOTE_HOST.substring(REMOTE_HOST.length-2).toLowerCase();
   else return 'us';
 }//locale

function showAmaz2007(str)
 { var part = str.split('|'); // part[0] should be kw's
   var usTemplate = '<' + 'a href="http://www.amazon.com/gp/product/XXX?ie=UTF8&tag=fourwheeldrivein&linkCode=as2&camp=1789&creative=9325&creativeASIN=XXX">YYY<' + '/a><' + 'img src="http://www.assoc-amazon.com/e/ir?t=fourwheeldrivein&l=as2&o=1&a=XXX" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />',
   ukTemplate = '<' + 'a href="http://www.amazon.co.uk/gp/product/XXX?ie=UTF8&tag=fourwheeldriv-21&linkCode=as2&camp=1634&creative=6738&creativeASIN=XXX">YYY<' + '/a><' + 'img src="http://www.assoc-amazon.co.uk/e/ir?t=fourwheeldriv-21&l=as2&o=2&a=XXX" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />';
   if(part.length < 4) part[3] = ''; // post link
   if(part.length < 5) part[4] = ''; // locale
   var template = usTemplate;  if(locale() == 'uk') template=ukTemplate;
   if(part[4] == 'uk') template = ukTemplate;  // overrides
   if(part[4] == 'us') template = usTemplate;  // overrides
   while(true)
    { var p=template.indexOf('XXX');  if(p >= 0)
        template=template.substring(0,p)+part[1]+template.substring(p+3);
      else break;
    }
   while(true)
    { var p=template.indexOf('YYY');  if(p >= 0)
        template=template.substring(0,p)+part[2]+template.substring(p+3);
      else break;
    }
   document.writeln(template + '<' + 'BR><'
     + 'FONT SIZE="-1">' + part[3] +'<' + '/FONT>' );
 }//showAmaz2007

function doAmaz2007()
{var dflt = "xyz,MML,Bioinformatics|0143010336|The Darwin Awards V:|Next Evolution|us";
 var url=document.URL+"$",  items = new Array(
 "Computing,merton,Images/$,Publication," + dflt,
 "merton,Images/$,Publication|0143038257|Three Cups of Tea|One Man's Mission to Promote Peace One School at a Time",
 "/AI/,MML,MDL,Learning,Bayes|1584883871|Bayesian Artificial Intelligence|Korb and Nicholson",
 "AlgDS,Algorithm,Computing|0201485419|The Art of Computer Programming, Vols.1-3|Donald Knuth",
 "AlgDS,Algorithm,Graph,Computing|0262032937|Introduction to Algorithms|Cormen et al",
 "AlgDS,Algorithm,BIB,Publications,/C/,Computing|0201657880|Programming Pearls|Jon Bentley",
 "AlgDS,Stack,Queue,/C/,Algorithm,Graph|0201756080|Algorithms in C|Sedgwick",
 "AlgDS,Stack,Queue,Cplusplus,/C/,Lang/$,PL-|0321543726|Programming Principles and Practice using C++|Stroustrup",
 "/C/,Cplusplus,Lang/$,PL-|0201700735|The C++ Programming Language|Stroustrup",
 "Bioinf|1584886420|An Introduction to Systems Biology|U.Alon",
 "Bioinf,Edit|0262101068|An Introduction to Bioinformatics Algorithms|Jones and Pevzner",
 "Bioinf,Edit|0199277877|Introduction to Bioinformatics|Arthur Lesk",
 "Bioinf|0805382194|Discovering Genomics, Proteomics and Bioinformatics|Campbell and Heyer",
 "Computers,Computing,BIB|019284055X|Colossus: The Secrets of Bletchley Park's Code Breaking Computers|Jack Copeland",
 "Computers,Computing,BIB|0470229055|The Annotated Turing|Charles Petzold",
 "FP/,Lambda|0691083940|The Calculi of Lambda Conversion|Alonzo Church|us",
 "FP/$,Lambda,Curried|0954300653|An Introduction To Lambda Calculi|C.Hankin",
 "FP/,Haskell|0521826144|Haskell 98 Language and Libraries|the Revised Report",
 "FP/$,Haskell|0521644089|The Haskell School of Expression:|Learning Functional Programming through Multimedia. P.Hudak",
 "FP/$,Haskell,Types,Curried|0521692695|Programming in Haskell|Graham Hutton",
 "FP/$,Haskell|0596514980|Real World Haskell|OSullivan et al",
 "FP/$,Haskell,Types,Curried|0134843460|Introduction to Functional Programming using Haskell|Richard Bird",
 "FP/$,Haskell,Curried|1740094042|An Introduction to Computing with Haskell|Chakravarty and Keller",
 "FP/,SML|0137903871|Elements of ML Programming|Ullman",
 "FP/$,SML,Curried|052156543X|ML for the Working programmer|Larry Paulson",
 "FP/$,SML|0201398206|Introduction to Programming using SML|Hansen and Rischel",
 "Java/,AlgDS,Algorithm|0321370139|Data Structures and Algorithm Analysis in Java|M.A.Weiss",
 "JavaScript,WWW|1565922344|JavaScript, the Definitive Guide|Flanagan",
 "Lang,PL-,Grammar,Syntax,Compil,Interp|0201100886|Compilers: Principles, Techniques, and Tools|Aho, Sethi and Ullman",
 "Lang/$,Compil,Grammar,PL-,/C/,Cplusplus|1882114396|Using GCC: Reference Manual|Stallman et al",
 "Lang/$,Compil,Grammar,PL-,Java/|052182060X|Modern Compiler Implementation in Java|Appel and Palsberg",
 "Logic,Math,Grammar|1930190867|Discrete Mathematics for Computer Science|K.P.Bogart",
 "Math,Numer,AlgDS,Logic|0201558025|Concrete Mathematics: A Foundation for Computer Science|Graham, Knuth, Patashnik",
 "MML,MDL,Wallace,Bayes,Ockham,/AI/,Learning,Stat|038723795X|Statistical and Inductive Inference by Minimum Message Length|Chris Wallace",
 "MML,MDL|0262072815|The Minimum Description Length Principle|Grunwald",
 "Prolog,Logic|3540629718|Clause and Effect: Prolog Programming|W.F.Clocksin",
 "Prolog,/AI/,Learning|0201403757|Prolog Programming for Artificial Intelligence|Ivan Bratko",
 "Propositional,Boolean,Digital,Circuit|013198926X|Logic and Computer Design Fundamentals|Mano and Kime",
 "Film/$,Movie,witch|B0001V01BQ|Monty Python and the Holy Grail|DVD|uk",
 "Film,Movie,witch|B000W8AB22|Monty Python, Monster Box Set|DVD|uk",
 "Film/$,Movie,SciFi|B000HWXQBQ|Dr. Strangelove|DVD|uk",
 "Film/$,Andromeda|B000JLTE5C|A for Andromeda|BBC DVD|uk",
 "Film/$,Andromeda|B000FPV8IS|The Andromeda Anthology|(1961) DVD|uk",
 "Publication,BIB,Seminar,Semantic,Interp,Lambda|0521314232|A Practical Introduction to Denotational Semantics|L.Allison"
 );
 // document.writeln(items.length + "_items");  //debug
 var i, numMatch = 0, candidate = new Array();
 for(i = 0; i < items.length; i++)
  { var the_item = items[i].split("|");
    var keys     = the_item[0].split(",");
    var j;
    for(j = 0; j < keys.length; j++)
     { if(url.indexOf(keys[j]) >= 0)
        { candidate[numMatch]=i; numMatch++;  break; }
  }  }//for j, for i
 // document.writeln(numMatch + "_match");  //debug
 if(numMatch <= 0)
    showAmaz2007(dflt);
 else
  { var nM=numMatch, nth;
    for(nth=1; nth <= Math.min((numMatch > 3 ? 3 : 2),numMatch); nth++)
     { var choice = Math.floor((nM - 0.0001) * Math.random());
       // document.writeln(' choice_' + choice ); // debug
       if(choice < 0) choice = 0;
       else if(choice >= nM) choice = nM - 1;
       if(nth>1) document.writeln('<'+'HR SIZE="1" NOSHADE>');
       showAmaz2007(items[candidate[choice]]);
       nM--; candidate[choice]=candidate[nM]; // !
  }  }
 document.writeln( ' <' + 'FONT COLOR="#999999" SIZE="1">' + numMatch
   + locale() + '<' + '/FONT>');
}//doAmaz2007

doAmaz2007();
// -->
</SCRIPT>

<NOSCRIPT>

<!-- 9/2007 -->
<FONT SIZE="+1">
<A HREF="http://www.amazon.com/gp/product/0596007612?ie=UTF8&tag=fourwheeldrivein&linkCode=as2&camp=1789&creative=9325&creativeASIN=0596007612">The C++ Cookbook</A>
</FONT>
mastering the language<BR>
</NOSCRIPT>
<!--
0596007612 The C++ Cookbook (2005)
0525949607 The Darwin Awards 4:, Intelligent Design (2006)
0618680004 The God Delusion, Richard Dawkins (2007)
-->

<!-- ====================================================================== -->
</TD></TR></TABLE>


<BR>
<TABLE BORDER="1" CELLSPACING="0" CELLPADDING="3" WIDTH="100%">
<TR><TD><FONT SIZE="-1">free:</FONT><BR>
<A HREF="http://www.linux.org/" TARGET="_top">Linux</A>
<FONT SIZE="-1">operating-sys</FONT><BR>

<A HREF="http://www.openoffice.org/" TARGET="_top">OpenOffice</A>
<FONT SIZE="-1">office-suite, ver.&nbsp;3.1+</FONT><BR>

<A HREF="http://www.gimp.org/" TARGET="_top">The GIMP</A>
<FONT SIZE="-1">~photoshop</FONT><BR>

<A HREF="http://www.mozilla.com/" TARGET="_top">Firefox</A>
<FONT SIZE="-1">web browser</FONT><BR>

<A HREF="http://flashblock.mozdev.org/" TARGET="_top">FlashBlock</A>
<FONT SIZE="-1">flash on/off</FONT><BR>
</TD></TR></TABLE>



    <!-- check for a recent-enough web-browser version -->
    <B><SCRIPT LANGUAGE="JavaScript">
    <!--
       var isOldBrowser = true,
           versionStr   = navigator.appVersion,
           appCodeName  = navigator.appCodeName.toLowerCase();
       if( appCodeName.indexOf('mozilla') >= 0  &&
           versionStr != null && versionStr.length > 0 )
        { var criticalVersion = 4.7; // recommended by m0n@sh uni .au
          var version = criticalVersion-0.001,  i,  numDot = 0,  stillOK = true;
          for( i = 0; i < versionStr.length; i++ ) // seek a number
           { if( versionStr.charAt(i) == '.' )
              { numDot ++ ;  stillOK = numDot < 2; }
             else
                stillOK = versionStr.charAt(i) >= '0' && versionStr.charAt(i) <= '9';
             if( ! stillOK ) break; // ...charAt(i) is bad
           }//for
          if( i > numDot ) // i>0, have a valid number in version[0..i-1]
             version = new Number( versionStr.substring(0,i) ) - 0;
          isOldBrowser = version < criticalVersion;
        }//if
       if( isOldBrowser )
        { document.writeln( '<' + 'BR>' );
          document.writeln( '<' + 'TABLE BORDER="1" CELLSPACING="0" WIDTH="100%"> ' );
          document.writeln( '<' + 'TR><' + 'TD BGCOLOR="#FFCCCC">' );
          document.writeln( '<' + 'FONT SIZE="+1">Upgrade your old web ' );
          document.writeln( '<' + 'A HREF="http://browsers.net' + 'scape.com/">[browser]<' + '/A>' );
          document.writeln( '<' + 'A HREF="http://www.moz' + 'illa.org/">[now]<' + '/A>!<' + '/FONT>' );
          document.writeln( '<' + '/TR> <' + '/TD> <' + '/TABLE>' );
        }//if
    // -->
    </SCRIPT></B>



<!-- Right extras for children  NB. relative to children -->

<!-- Right Extras Here -->
  </TD></TR>
  </TABLE>

</TD></TR>
</TABLE>



<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="2" WIDTH="100%">
<TR><TD ALIGN="center">
<HR SIZE="4" NOSHADE> <!-- --------------------------------------subtable--->
<TABLE BORDER="0" CELLSPACING="0" CELLPADDING="1">
<TR><TD><FONT SIZE="-1">
<ADDRESS>&copy; L. Allison &nbsp;
<A HREF="http://www.allisons.org/ll/" TARGET="_top">http://www.allisons.org/ll/</A> &nbsp;
<NOBR>(<U>or as otherwise indicated</U>),</NOBR><BR>
Created with &quot;vi (Linux + Solaris)&quot;,&nbsp;
charset=iso-8859-1,&nbsp;
<NOBR>fetched Saturday, 20-Feb-2010 20:27:06 EST.</NOBR>
</FONT>
</TD></TR>
</TABLE>
<HR SIZE="4" NOSHADE> <!-- --------------------------------------subtable--->
</TD></TR>
</TABLE>


</BODY>
</HTML>
